(function(){var SEP="/",DYN=":";function Ruut(routes){routes=routes||{};return Ruut.check.bind(this,routes)}Ruut.search=function(routes,pathname,params){if(!Array.isArray(routes)){routes=[null,routes,null]}if(pathname===SEP){if(routes[0]===null){return{is_valid:false}}return{is_valid:true,_:routes[0],params:params}}if(pathname.charAt(0)===SEP){pathname=pathname.substr(1)}var nextIndex=pathname.indexOf(SEP),cSplit=nextIndex!==-1?pathname.substr(0,nextIndex):pathname,found=routes[1][cSplit],dynamicField=null,lastIndex=null;if(typeof found==="object"){if(nextIndex===-1){return Ruut.search(found,SEP,params)}return Ruut.search(found,pathname.substr(nextIndex),params)}if(found!==undefined){return{is_valid:true,_:found,params:params}}dynamicField=Object.keys(routes[1]).filter(function(c){return c.charAt(0)===DYN})[0];if(dynamicField){found=routes[1][dynamicField];params[dynamicField.substr(1)]=cSplit;if(typeof found==="object"){nextIndex=pathname.indexOf(SEP);if(nextIndex===-1){return Ruut.search(found,SEP,params)}return Ruut.search(found,pathname.substr(nextIndex),params)}lastIndexOf=pathname.lastIndexOf(SEP);if(lastIndexOf===-1||lastIndexOf===pathname.length-1){return{is_valid:true,_:found,params:params}}}if(routes[2]){return{is_valid:true,_:routes[2],params:params}}return{is_valid:false}};Ruut.check=function(routes,pathname){var found=Ruut.search(routes,pathname,{});if(found.is_valid){if(typeof found._==="function"){return{data:found._(found.params),params:found.params}}return{data:found._,params:found.params}}return null};if(typeof module==="object"){module.exports=Ruut}else if(typeof window==="object"){window.Ruut=Ruut}})();